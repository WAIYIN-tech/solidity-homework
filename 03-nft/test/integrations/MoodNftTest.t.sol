// SPDX-License-Identifier: SEE LICENSE IN LICENSE
pragma solidity ^0.8.20;

import {Test, console} from "forge-std/Test.sol";
import {DeployMoodNFT} from "../../script/DeployMoodNFT.s.sol";
import {MoodNft} from "../../src/MoodNft.sol";
import {Strings} from "openzeppelin-contracts/contracts/utils/Strings.sol";

contract MoodNftTest is Test {
    DeployMoodNFT public deployer;
    MoodNft public mood;
    address public USER = makeAddr("KENTO");

    string public constant SAD_SVG_URI =
        "data:application/json;base64,eyJuYW1lIjogIk1vb2ROZnQiLCAiZGVzY3JpcHRpb24iOiAiQW4gTmZ0IHRoYXQgcmVmbGVjdHMgdGhlIG93bmVycyBtb29kLiIsICJhdHRyaWJ1dGVzIjogW3sidHJhaXRfdHlwZSI6ICJtb29kaW5lc3MiLCAidmFsdWUiOiAxMDB9XSwgImltYWdlIjogImRhdGE6aW1hZ2Uvc3ZnK3htbDtiYXNlNjQsUEQ5NGJXd2dkbVZ5YzJsdmJqMGlNUzR3SWlCemRHRnVaR0ZzYjI1bFBTSnVieUkvUGp4emRtY2dkMmxrZEdnOUlqRXdNalJ3ZUNJZ2FHVnBaMmgwUFNJeE1ESTBjSGdpSUhacFpYZENiM2c5SWpBZ01DQXhNREkwSURFd01qUWlJSGh0Ykc1elBTSm9kSFJ3T2k4dmQzZDNMbmN6TG05eVp5OHlNREF3TDNOMlp5SStQSEJoZEdnZ1ptbHNiRDBpSXpNek15SWdaRDBpVFRVeE1pQTJORU15TmpRdU5pQTJOQ0EyTkNBeU5qUXVOaUEyTkNBMU1USnpNakF3TGpZZ05EUTRJRFEwT0NBME5EZ2dORFE0TFRJd01DNDJJRFEwT0MwME5EaFROelU1TGpRZ05qUWdOVEV5SURZMGVtMHdJRGd5TUdNdE1qQTFMalFnTUMwek56SXRNVFkyTGpZdE16Y3lMVE0zTW5NeE5qWXVOaTB6TnpJZ016Y3lMVE0zTWlBek56SWdNVFkyTGpZZ016Y3lJRE0zTWkweE5qWXVOaUF6TnpJdE16Y3lJRE0zTW5vaUx6NDhjR0YwYUNCbWFXeHNQU0lqUlRaRk5rVTJJaUJrUFNKTk5URXlJREUwTUdNdE1qQTFMalFnTUMwek56SWdNVFkyTGpZdE16Y3lJRE0zTW5NeE5qWXVOaUF6TnpJZ016Y3lJRE0zTWlBek56SXRNVFkyTGpZZ016Y3lMVE0zTWkweE5qWXVOaTB6TnpJdE16Y3lMVE0zTW5wTk1qZzRJRFF5TVdFME9DNHdNU0EwT0M0d01TQXdJREFnTVNBNU5pQXdJRFE0TGpBeElEUTRMakF4SURBZ01DQXhMVGsySURCNmJUTTNOaUF5TnpKb0xUUTRMakZqTFRRdU1pQXdMVGN1T0MwekxqSXRPQzR4TFRjdU5FTTJNRFFnTmpNMkxqRWdOVFl5TGpVZ05UazNJRFV4TWlBMU9UZHpMVGt5TGpFZ016a3VNUzA1TlM0NElEZzRMalpqTFM0eklEUXVNaTB6TGprZ055NDBMVGd1TVNBM0xqUklNell3WVRnZ09DQXdJREFnTVMwNExUZ3VOR00wTGpRdE9EUXVNeUEzTkM0MUxURTFNUzQySURFMk1DMHhOVEV1Tm5NeE5UVXVOaUEyTnk0eklERTJNQ0F4TlRFdU5tRTRJRGdnTUNBd0lERXRPQ0E0TGpSNmJUSTBMVEl5TkdFME9DNHdNU0EwT0M0d01TQXdJREFnTVNBd0xUazJJRFE0TGpBeElEUTRMakF4SURBZ01DQXhJREFnT1RaNklpOCtQSEJoZEdnZ1ptbHNiRDBpSXpNek15SWdaRDBpVFRJNE9DQTBNakZoTkRnZ05EZ2dNQ0F4SURBZ09UWWdNQ0EwT0NBME9DQXdJREVnTUMwNU5pQXdlbTB5TWpRZ01URXlZeTA0TlM0MUlEQXRNVFUxTGpZZ05qY3VNeTB4TmpBZ01UVXhMalpoT0NBNElEQWdNQ0F3SURnZ09DNDBhRFE0TGpGak5DNHlJREFnTnk0NExUTXVNaUE0TGpFdE55NDBJRE11TnkwME9TNDFJRFExTGpNdE9EZ3VOaUE1TlM0NExUZzRMalp6T1RJZ016a3VNU0E1TlM0NElEZzRMalpqTGpNZ05DNHlJRE11T1NBM0xqUWdPQzR4SURjdU5FZzJOalJoT0NBNElEQWdNQ0F3SURndE9DNDBRelkyTnk0MklEWXdNQzR6SURVNU55NDFJRFV6TXlBMU1USWdOVE16ZW0weE1qZ3RNVEV5WVRRNElEUTRJREFnTVNBd0lEazJJREFnTkRnZ05EZ2dNQ0F4SURBdE9UWWdNSG9pTHo0OEwzTjJaejQ9In0=";

    function setUp() public {
        deployer = new DeployMoodNFT();
        mood = deployer.run();
    }

    function testViewTokenURIIntegration() public {
        vm.prank(USER);
        mood.safeMint();
        console.log(mood.tokenURI(0));
    }

    function testFlipTokenToSad() public {
        vm.startPrank(USER);
        mood.safeMint();
        mood.flipMood(0);

        uint256 tokenIdMood = mood.getTokenIdMood(0);
        string memory uri = mood.tokenURI(0);
        vm.stopPrank();

        assertEq(tokenIdMood, uint256(MoodNft.Mood.SAD));
        assert(Strings.equal(SAD_SVG_URI, uri));
    }
}
